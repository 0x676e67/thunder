name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  linux:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform:
    #       - target: "x86_64-unknown-linux-gnu"
    #         sub: x86_64
    #       - target: "aarch64-unknown-linux-gnu"
    #         sub: aarch64
    #       - target: "x86_64-unknown-linux-musl"
    #         sub: x86_64
    #       - target: "aarch64-unknown-linux-musl"
    #         sub: aarch64
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: "x86_64-unknown-linux-gnu"
            sub: x86_64
          - target: "x86_64-unknown-linux-musl"
            sub: x86_64
          - target: "aarch64-unknown-linux-gnu"
            sub: aarch64
          - target: "aarch64-unknown-linux-musl"
            sub: aarch64
    container:
      image: docker://ghcr.io/messense/cargo-zigbuild:latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Install cargo packages
        run: pip install cargo-deb cargo-generate-rpm

      - name: Install upx
        working-directory: /tmp
        env:
          CC: clang
          CXX: clang++
        run: |
          set -ex
          git clone --recursive https://github.com/upx/upx.git
          cd upx
          make
          cp build/release/upx /usr/local/bin/upx

      - name: Get tag
        if: "startsWith(github.ref, 'refs/tags/')"
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          # Optionally strip `v` prefix
          strip_v: true
          
      - name: Build package
        shell: bash
        run: |
          cargo zigbuild --release --target=${{ matrix.platform.target }}
          upx target/${{ matrix.platform.target }}/release/xunlei
          cargo deb --target=${{ matrix.platform.target }} --no-build --no-strip
          cargo generate-rpm --target=${{ matrix.platform.target }} --payload-compress none

          cd target/${{ matrix.platform.target }}/release
          tar czvf xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz xunlei
          shasum -a 256 xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz > xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -

          cargo zigbuild --release --target=${{ matrix.platform.target }} --no-default-platform --platform launch
          upx target/${{ matrix.platform.target }}/release/xunlei
          cargo deb --target=${{ matrix.platform.target }} --no-build --no-strip
          cargo generate-rpm --target=${{ matrix.platform.target }} --payload-compress none

          mv target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}_arm64.deb target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}-launch_arm64.deb
          mv target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}_arm64.rpm target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}-launch_arm64.rpm
          cd target/${{ matrix.platform.target }}/release
          tar czvf xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-launch.tar.gz xunlei
          shasum -a 256 xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-launch.tar.gz > xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-launch.tar.gz.sha256
          cd -
 
          bash +x unpack.sh ${{ matrix.platform.target.sub }} && cargo zigbuild --release --target=${{ matrix.platform.target }} --no-default-platform --platform embed
          upx target/${{ matrix.platform.target }}/release/xunlei
          cargo deb --target=${{ matrix.platform.target }} --no-build --no-strip
          cargo generate-rpm --target=${{ matrix.platform.target }} --payload-compress none

          mv target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}_arm64.deb target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}-embed_arm64.deb
          mv target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}_arm64.rpm target/${{ matrix.platform.target }}/debian/xunlei_${{ steps.tag.outputs.tag }}-embed_arm64.rpm
          cd target/${{ matrix.platform.target }}/release
          tar czvf xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-embed.tar.gz xunlei
          shasum -a 256 xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-embed.tar.gz > xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}-embed.tar.gz.sha256
          cd -

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/xunlei
          if-no-files-found: error

      - name: Upload deb artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}-deb
          path: target/${{ matrix.platform.target }}/debian/xunlei_*.deb
          if-no-files-found: error

      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}-rpm
          path: target/${{ matrix.platform.target }}/generate-rpm/xunlei*.rpm
          if-no-files-found: error

      - name: Archive binary
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz xunlei
          shasum -a 256 xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz > xunlei-${{ steps.tag.outputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          files: |
            target/${{ matrix.platform.target }}/release/xunlei*.tar.gz*
            target/${{ matrix.platform.target }}/debian/xunlei_*.deb
            target/${{ matrix.platform.target }}/generate-rpm/xunlei*.rpm
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true

      - name: Remove cached deb and RPM packages
        run: |
          rm -rf target/${{ matrix.platform.target }}/debian
          rm -rf target/${{ matrix.platform.target }}/generate-rpm